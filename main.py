import random
import re

from pyrogram import Client, filters
from pyrogram.errors import FloodWait

from time import sleep

# —Å—é–¥–∞ –≤—Å—Ç–∞–≤ –∫–æ–¥–∏
app = Client("my_account", api_id=876100, api_hash="ab03c3758ababdad2d8859e08244ae40")

# –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
nickname = "deadnfixed"
# -1001564474914 - —Ç–µ—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª, -1001191692234 - —à–µ –æ–¥–∏–Ω —Ç–µ—Å—Ç–æ–≤–∏–π –∫–∞–Ω–∞–ª, -1001180084919 - –ø–µ—Ç—è
listen_to = "000"  # –ø–æ —ñ–¥–µ—ó –º–æ–∂–Ω–∞ –≤–∫–∞–∑–∞—Ç–∏ —Ç–µ–≥, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "mcpetya_slivy"
forward_to = "111"
random_bot = "Random_UAbot"

# –Ω–∞–∑–≤–∏ –¥—Ä–æ–ø—ñ–≤
drop = ["–ø–∏–ª —ñ –≥–Ω–∏–ª—ñ –Ω–µ–¥–æ—ó–¥–∫–∏", "–∫–ª–∞—Å–æ–≤–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è", "–¥—Ä–∏–Ω —ñ —â–∏—Ç", "–ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π —É–ª–∞–º–æ–∫ –±—Ä–æ–Ω–µ—Ç–µ—Ö–Ω—ñ–∫–∏",
        "50 –≥—Ä–∏–≤–µ–Ω—å", "—è—â–∏–∫–æ–º –≥–æ—Ä—ñ–ª–∫–∏", "–º–µ—Ä—Ç–≤–∏–π —Ä—É—Å–∞–∫", "–ú—É—Ö–æ–º–æ—Ä –∫–æ—Ä–æ–ª—ñ–≤—Å—å–∫–∏–π", "—É–ø–∞–∫–æ–≤–æ–∫ —Ñ–æ–ª—å–≥–∏",
        "–ö—Ä—ñ–º –≥–∞–º–∞–Ω—Ü—è", "—Ä—É—á–Ω–∏–π –ø—Ä–æ—Ç–∏—Ç–∞–Ω–∫–æ–≤–∏–π", "–Ω–µ—É—à–∫–æ–¥–∂–µ–Ω–∏–π –ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç", "–ø–∞—Ä–∞–¥–Ω–∞ —Ñ–æ—Ä–º–∞"]

# –Ω–∞–∑–≤–∏ –¥—Ä–æ–ø—ñ–≤ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏
drop_texts = ["‚ö™ –ü–∏–ª —ñ –≥–Ω–∏–ª—ñ –Ω–µ–¥–æ—ó–¥–∫–∏", "‚ö™ –ö–ª–∞—Å–æ–≤–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è", "‚ö™ –î—Ä–∏–Ω —ñ —â–∏—Ç", "‚ö™ –£–ª–∞–º–æ–∫", "üîµ 50 –≥—Ä–∏–≤–µ–Ω—å",
              "üîµ –Ø—â–∏–∫ –≥–æ—Ä—ñ–ª–∫–∏", "üîµ –ú–µ—Ä—Ç–≤–∏–π —Ä—É—Å–∞–∫", "üü£ –ú—É—Ö–æ–º–æ—Ä –∫–æ—Ä–æ–ª—ñ–≤—Å—å–∫–∏–π", "üü£ –®–∞–ø–æ—á–∫–∞", "üü£ –á–∂–∞", "üü° –†–ü–ì-7",
              "üü° –ë—Ä–æ–Ω—ñ–∫ –í–∞–≥–Ω–µ—Ä—ñ–≤—Ü—è", "üü° –ü–æ–≥–æ–Ω"]


# —Ä–µ–ø–æ—Å—Ç–∏ –º—Ü –ø–µ–¥—ñ
@app.on_message(filters.chat(listen_to))
def mc_petya(_, message):
    app.forward_messages(forward_to, listen_to, message.id, disable_notification=True)


@app.on_edited_message(filters.chat(listen_to))
def mc_petya(_, message):
    app.forward_messages(forward_to, listen_to, message.id, disable_notification=True)


@app.on_message(filters.command("info", "!")&filters.me)
def info(_, message):
    app.send_message(message.chat.id, message.reply_to_message)


# –∫–∏–¥–∞–Ω–Ω—è –±–æ—ó–≤
@app.on_message(filters.command("rusak", "!"))
def rusak_battle(_, message):
    chat_id = message.chat.id
    app.delete_messages(chat_id, message.id)
    splited = message.text.split(" ")
    # —è–∫—à–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —Å–µ–±–µ
    if len(splited) == 2 and message.from_user.username == nickname:
        fight(_, int(splited[1]), message)
    # —è–∫—à–æ –≤—ñ–¥ —ñ–Ω—à–æ–≥–æ —á–µ–ª–∞
    elif len(splited) == 3:
        # —è–∫—à–æ –∑–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –¥–æ —Ç–µ–±–µ
        if splited[1] == nickname:
            fight(_, int(splited[2]), message)


@app.on_message(filters.command("heal", "!"))
def buy_heal(_, message):
    chat_id = message.chat.id
    app.send_message(chat_id, "—á–µ–∫–∞—é —Ö–ø –≤ –±–æ—Ç—ñ")
    sent = app.send_message(random_bot, "/rusak")
    sleep(2)
    health_message = get_message(chat_id, sent.id + 1)
    health = int(health_message.caption.split()[18])
    if health < 30:
        app.send_message(chat_id, "—Ç—Ä–µ–±–∞ –∞–ø—Ç–µ—á–∫—É")
        sent = app.send_message(random_bot, "/shop")
        sleep(2)
        bot_shop = get_message(chat_id, sent.id + 1)
        bot_shop.click(3)
        app.send_message(chat_id, "–∫—É–ø–∏–≤ –∞–ø—Ç–µ—á–∫—É")
    else:
        app.send_message(chat_id, "–Ω–æ—Ä–º, –∂–∏—Ç–∏ –º–æ–∂–Ω–∞")


@app.on_message(filters.command("click", "!") & filters.me)
def click_buttons(_, message):
    chat_id = message.chat.id
    app.delete_messages(chat_id, message.id)
    splited = message.text.split(" ")
    times = int(splited[1])
    start_message_id = message.reply_to_message.id
    buy_heal(_, message)
    click(_, start_message_id, times, chat_id)


@app.on_message(filters.command("info", "!"))
def info(_, message):
    app.send_message(message.chat.id, message.reply_to_message)


@app.on_message(filters.command("guide", "!"))
def guide(_, message):
    text = "–≥–∞–π–¥ –ø–æ –∫–æ–º–∞–Ω–¥–∞—Ö\n\n\n!rusak *—á–∏—Å–ª–æ* - –Ω–∞–¥—Å–∏–ª–∞—î *—á–∏—Å–ª–æ* –±–æ—ó–≤\n\n" \
           "!rusak *–Ω—ñ–∫–Ω–µ–π–º* *—á–∏—Å–ª–æ* - –Ω–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥ —ñ–º–µ–Ω—ñ *–Ω—ñ–∫–Ω–µ–π–º* *—á–∏–ª–æ* –±–æ—ó–≤\n\n" \
           "!heal - —Ö—ñ–ª–∏—Ç—å\n\n" \
           "!click *—á–∏—Å–ª–æ* - —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–æ–≥–æ —Ö—Ç–æ –Ω–∞–¥—Å–∏–ª–∞—î –∫–æ–º–∞–Ω–¥—É, —Ä–µ–ø–ª–∞–π–Ω—É–≤—à–∏ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –ø–æ—á–∏–Ω–∞—î –∫–ª—ñ–∫–∞—Ç–∏" \
           "–ø–æ *—á–∏—Å–ª–æ* –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —Ä–µ–ø–ª–∞–π–Ω—É—Ç–æ–≥–æ\n\n" \
           "!ebash, !cluck - –¥–∞.\n\n" \
           "!packs *—á–∏—Å–ª–æ* - –≤—ñ–¥–∫—Ä–∏–≤–∞—î *—á–∏—Å–ª–æ* –ø–∞–∫—ñ–≤"
    app.send_message(message.chat.id, text)


@app.on_message(filters.command("ebash", "!"))
def ebash(_, message):
    chat_id = message.chat.id
    if chat_id != -751052700:
        return
    splited = message.text.split(" ")
    times = 30
    target = splited[1]
    if target != nickname:
        return
    fight(_, times, message)
    text = f"!cluck {message.from_user.username}"
    sent = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
    to_reply = get_message(chat_id, sent.id - 1).id
    app.send_message(chat_id, text, reply_to_message_id=to_reply)


@app.on_message(filters.command("cluck", "!"))
def force_click(_, message):
    chat_id = message.chat.id
    if chat_id != -751052700:
        return
    splited = message.text.split(" ")
    times = 30
    target = splited[1]
    if target != nickname:
        return
    start_message_id = message.reply_to_message.id
    buy_heal(_, message)
    click(_, start_message_id, times, chat_id)
    app.send_message(chat_id, "–Ω–∞–∫–ª—ñ–∫–∞–≤—Å—è")
    sleep(5)
    fight(_, times, message)
    text = f"!cluck {message.from_user.username}"
    sent = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
    to_reply = get_message(chat_id, sent.id - 1).id
    app.send_message(chat_id, text, reply_to_message_id=to_reply)


@app.on_message(filters.command("packs", "!"))
def analyze(_, message):
    pack_price = 20
    chat_id = message.chat.id
    # —è–∫—à–æ –∑–∞–ø—É—â–µ–Ω–æ –≤ —á–∞—Ç—ñ, –≤—ñ–¥–º—ñ–Ω–Ω–æ–º—É –≤—ñ–¥ —á–∞—Ç—É –∑ –±–æ—Ç–æ–º
    if chat_id != 1466731329:
        app.send_message(chat_id, "–≤—Å—ñ –¥–∏–≤—ñ—Ç—å—Å—è, —è –¥–µ–±—ñ–ª")
        return
    splited = message.text.split(" ")
    packs = int(splited[1])
    sent = app.send_message(random_bot, "/shop")
    sleep(1)
    money_message = get_message(random_bot, sent.id + 1)
    money = int(money_message.text.split()[2])
    to_spend = packs * pack_price
    if to_spend > money * 0.95 or packs <= 0:
        app.send_message(chat_id, "–¥–∞–ª–±–∞–π–æ–±, –π–¥–∏ –∑–∞—Ä–æ–±–ª—è–π")
        return
    main_commands = int(packs / 30)
    adjust_commands = packs % 30
    app.send_message(chat_id, f"–ë—É–¥–µ –≤—ñ–¥–∫—Ä–∏—Ç–æ {packs} –ø–∞–∫–∏/-—ñ–≤, "
                              f"—Ç–æ–±—Ç–æ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ 30*{main_commands} –∫–æ–º–∞–Ω–¥, "
                              f"—Ç–∞ {adjust_commands} –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥–æ–≤–µ—Ä—à–µ–Ω–Ω—è")
    sleep(3)
    messages_to_forward = []
    start = 511585
    received_drops = []
    for i in range(len(drop)):
        received_drops.append(0)
    for i in range(30 if main_commands != 0 else 0):
        messages_to_forward.append(start)
        start -= 1

    open_packs(_, chat_id, main_commands, messages_to_forward, received_drops)

    start = 511585
    messages_to_forward = []
    for i in range(adjust_commands):
        messages_to_forward.append(start)
        start -= 1

    do_open_packs(_, chat_id, adjust_commands, messages_to_forward, received_drops)

    stats = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—é {packs} –ø–∞–∫—ñ–≤\n"
    for i in range(len(drop)):
        stats += f"{drop_texts[i]} - {received_drops[i]}\n"
    app.send_message(chat_id, stats)


def open_packs(_, chat_id, commands, messages_to_forward, received_drops):
    for i in range(commands):
        app.forward_messages(chat_id, -786803186, messages_to_forward)
        sleep(5)
        pack_id = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è").id - 1
        click(_, pack_id, 30, chat_id)
        for j in range(pack_id - 30, pack_id + 1):
            msg = get_message(chat_id, j)
            for k in range(len(drop)):
                if drop[k] in msg.text:
                    received_drops[k] = received_drops[k] + 1
        app.send_message("Random_UAbot", "/feed")


def do_open_packs(_, chat_id, commands, messages_to_forward, received_drops):
    for i in range(1 if commands != 0 else 0):
        app.forward_messages(chat_id, -786803186, messages_to_forward)
        sleep(5)
        pack_id = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è").id - 1
        click(_, pack_id, commands, chat_id)
        for j in range(pack_id - commands, pack_id + 1):
            msg = get_message(chat_id, j)
            for k in range(len(drop)):
                if drop[k] in msg.text:
                    received_drops[k] = received_drops[k] + 1
        app.send_message("Random_UAbot", "/feed")


def fight(_, times, message):
    chat_id = message.chat.id
    # –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î–º –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–æ—ó–≤
    if times < 1:
        app.send_message(chat_id, "–º–∞–ª–æ, —Å—Ç–∞–≤–ª—é 1")
        times = 1
    elif times > 30:
        app.send_message(chat_id, "–∑–∞–¥–æ—Ñ—ñ–≥–∞, —Å—Ç–∞–≤–ª—é 30")
        times = 30
    for i in range(times):
        try:
            if i == 0:
                buy_heal(_, message)
            inline_results = app.get_inline_bot_results("Random_UAbot")
            app.send_inline_bot_result(chat_id, inline_results.query_id, inline_results.results[0].id)
            sleep(1)
        except FloodWait as e:
            sleep(e.value)
    app.send_message(chat_id, "–∫—ñ–Ω—á–∏–≤")


def click(_, start_message_id, times, chat_id):
    if times > 30:
        app.send_message(chat_id, "–∑–∞–¥–æ—Ñ—ñ–≥–∞, —Å—Ç–∞–≤–ª—é 30")
        times = 30
    elif times < 1:
        app.send_message(chat_id, "–¥—É—Ä–∞—á–æ–∫? –±—É–¥–µ 1")
        times = 1
    for i in range(start_message_id - times, start_message_id + 1):
        message_to_click = app.get_messages(chat_id, i)
        try:
            message_to_click.click(0, timeout=1)
        except TimeoutError as e:   # skip timeout
            pass
        except ValueError as e:     # skip non-battle messages
            pass


def get_message(chat_id, sent_id):
    message = app.get_messages(chat_id, sent_id)
    if message.empty:
        get_message(chat_id, sent_id)
    return message


app.run()

import asyncio

from pyrogram import Client, filters
from pyrogram.errors import FloodWait

from time import sleep

app = Client("my_account", api_id=876100, api_hash="ab03c3758ababdad2d8859e08244ae40")  # —Å—é–¥–∞ –≤—Å—Ç–∞–≤ –∫–æ–¥–∏
nickname = "deadnfixed"
drop = ["–ø–∏–ª —ñ –≥–Ω–∏–ª—ñ –Ω–µ–¥–æ—ó–¥–∫–∏", "–∫–ª–∞—Å–æ–≤–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è", "–¥—Ä–∏–Ω —ñ —â–∏—Ç", "–ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π —É–ª–∞–º–æ–∫ –±—Ä–æ–Ω–µ—Ç–µ—Ö–Ω—ñ–∫–∏",
        "50 –≥—Ä–∏–≤–µ–Ω—å", "—è—â–∏–∫–æ–º –≥–æ—Ä—ñ–ª–∫–∏", "–º–µ—Ä—Ç–≤–∏–π —Ä—É—Å–∞–∫", "–ú—É—Ö–æ–º–æ—Ä –∫–æ—Ä–æ–ª—ñ–≤—Å—å–∫–∏–π", "—É–ø–∞–∫–æ–≤–æ–∫ —Ñ–æ–ª—å–≥–∏",
        "–ö—Ä—ñ–º –≥–∞–º–∞–Ω—Ü—è", "—Ä—É—á–Ω–∏–π –ø—Ä–æ—Ç–∏—Ç–∞–Ω–∫–æ–≤–∏–π", "–Ω–µ—É—à–∫–æ–¥–∂–µ–Ω–∏–π –ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç", "–ø–∞—Ä–∞–¥–Ω–∞ —Ñ–æ—Ä–º–∞"]

drop_texts = ["‚ö™ –ü–∏–ª —ñ –≥–Ω–∏–ª—ñ –Ω–µ–¥–æ—ó–¥–∫–∏", "‚ö™ –ö–ª–∞—Å–æ–≤–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è", "‚ö™ –î—Ä–∏–Ω —ñ —â–∏—Ç", "‚ö™ –£–ª–∞–º–æ–∫", "üîµ 50 –≥—Ä–∏–≤–µ–Ω—å",
              "üîµ –Ø—â–∏–∫ –≥–æ—Ä—ñ–ª–∫–∏", "üîµ –ú–µ—Ä—Ç–≤–∏–π —Ä—É—Å–∞–∫", "üü£ –ú—É—Ö–æ–º–æ—Ä –∫–æ—Ä–æ–ª—ñ–≤—Å—å–∫–∏–π", "üü£ –®–∞–ø–æ—á–∫–∞", "üü£ –á–∂–∞", "üü° –†–ü–ì-7",
              "üü° –ë—Ä–æ–Ω—ñ–∫ –í–∞–≥–Ω–µ—Ä—ñ–≤—Ü—è", "üü° –ü–æ–≥–æ–Ω"]


@app.on_message(filters.command("rusak", "!") & filters.me)
def rusak_battle(_, message):
    times = int(message.text[6:])
    chat_id = message.chat.id
    app.delete_messages(chat_id, message.message_id)
    if times > 30:
        app.send_message(chat_id, "–ó–∞–¥–æ—Ö—É—è, —Å—Ç–∞–≤–ª—é 30")
        times = 30
    fight(_, message, times, chat_id)


@app.on_message(filters.command("huyak", "!"))
def rusak_battle(_, message):
    splited = message.text.split(" ")
    times = int(splited[2])
    target = splited[1]
    chat_id = -786803186
    app.delete_messages(chat_id, message.message_id)
    if target != nickname:
        return
    if times > 30:
        app.send_message(chat_id, "–ó–∞–¥–æ—Ö—É—è, —Å—Ç–∞–≤–ª—é 30")
        times = 30
    elif times < 1:
        app.send_message(chat_id, "–î—É—Ä–∞—á–æ–∫? –ù—É –≤–æ—Ç –Ω–∞—à–æ —Ç–∞–∫–µ —Ä–æ–±–∏—Ç–∏...")
        times = 1
    fight(_, message, times, chat_id)


@app.on_message(filters.command("heal", "!"))
def buy_heal(_, message):
    chat_id = message.chat.id
    app.send_message(chat_id, "—á–µ–∫–∞—é —Ö–ø –≤ –±–æ—Ç—ñ")
    sent = app.send_message("Random_UAbot", "/rusak")
    sleep(3)
    health = int(app.get_messages("Random_UAbot", sent.message_id + 1).caption.split()[18])
    if health < 30:
        app.send_message(chat_id, "—Ç—Ä–µ–±–∞ –∞–ø—Ç–µ—á–∫—É")
        sent = app.send_message("Random_UAbot", "/shop")
        sleep(2)
        bot_shop = app.get_messages("Random_UAbot", sent.message_id + 1)
        bot_shop.click(3)
        app.send_message(chat_id, "–∫—É–ø–∏–≤ –∞–ø—Ç–µ—á–∫—É")
    else:
        app.send_message(chat_id, "–Ω–æ—Ä–º, –∂–∏—Ç–∏ –º–æ–∂–Ω–∞")


@app.on_message(filters.command("click", "!") & filters.me)
def click_buttons(_, message):
    times = int(message.text[6:])
    start_message_id = message.reply_to_message.message_id
    chat_id = message.chat.id
    app.delete_messages(chat_id, message.message_id)
    if times > 40:
        app.send_message(chat_id, "–∑–∞–¥–æ—Ñ—ñ–≥–∞, —Å—Ç–∞–≤–ª—é 30")
        times = 40
    elif times < 1:
        app.send_message(chat_id, "–¥—É—Ä–∞—á–æ–∫? –±—É–¥–µ 1")
        times = 1
    buy_heal(_, message)
    click(_, message, start_message_id, times, chat_id)


@app.on_message(filters.command("info", "!"))
def info(_, message):
    app.send_message(message.chat.id, message.reply_to_message)


@app.on_message(filters.command("ebash", "!"))
def ebash(_, message):
    chat_id = message.chat.id
    if chat_id != -751052700:
        return
    splited = message.text.split(" ")
    times = 30
    target = splited[1]
    if target != nickname:
        return
    buy_heal(_, message)
    fight(_, message, times, chat_id)
    text = f"!cluck {message.from_user.username}"
    sent = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
    app.send_message(chat_id, text, reply_to_message_id=app.get_messages(chat_id, sent.message_id - 2).message_id)


@app.on_message(filters.command("cluck", "!"))
def force_click(_, message):
    chat_id = message.chat.id
    if chat_id != -751052700:
        return
    splited = message.text.split(" ")
    times = 30
    target = splited[1]
    if target != nickname:
        return
    start_message_id = message.reply_to_message.message_id
    buy_heal(_, message)
    click(_, message, start_message_id, times, chat_id)
    app.send_message(chat_id, "–Ω–∞–∫–ª—ñ–∫–∞–≤—Å—è")
    sleep(5)
    buy_heal(_, message)
    fight(_, message, times, chat_id)
    text = f"!cluck {message.from_user.username}"
    sent = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
    sleep(5)
    app.send_message(chat_id, text, reply_to_message_id=app.get_messages(chat_id, sent.message_id-2).message_id)


@app.on_message(filters.command("packs", "!"))
def analyze(_, message):
    chat_id = message.chat.id
    if chat_id != 1466731329:
        app.send_message(chat_id, "–≤—Å—ñ –¥–∏–≤—ñ—Ç—å—Å—è, —è –¥–µ–±—ñ–ª")
        return
    splited = message.text.split(" ")
    sent = app.send_message("Random_UAbot", "/shop")
    sleep(1)
    money = int(app.get_messages("Random_UAbot", sent.message_id + 1).text.split()[2])
    to_spend = int(splited[1])
    commands = int(splited[2])
    if to_spend > money * 0.95:
        app.send_message(chat_id, "–¥–∞–ª–±–∞–π–æ–±")
        return
    times = int((to_spend/20)/commands)
    if times == 0:
        app.send_message(chat_id, "–¥–∞–ª–±–∞–π–æ–±")
        return
    app.send_message(chat_id, f"–ë—É–¥–µ –≤—ñ–¥–∫—Ä–∏—Ç–æ {int(to_spend/20)} –ø–∞–∫-s, "
                              f"—Ç–æ–±—Ç–æ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–æ–º–∞–Ω–¥ pack, –±—É–¥–µ –≤–∏–∫–æ–Ω–∞–Ω–æ {times} —ñ—Ç–µ—Ä–∞—Ü—ñ–π")
    sleep(5)

    messages_to_forward = []
    start = 511585
    matches = []
    for i in range(len(drop)):
        matches.append(0)
    for i in range(commands):
        messages_to_forward.append(start)
        start -= 1

    for i in range(times):
        app.forward_messages(chat_id, -786803186, messages_to_forward)
        sleep(10)
        sent = app.send_message(chat_id, "–ø–æ–ª—É—á–∞—é —ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
        click(_, message, sent.message_id - 1, commands, chat_id)
        for j in range(sent.message_id - commands, sent.message_id + 1):
            msg = app.get_messages(chat_id, j)
            for k in range(len(drop)):
                if drop[k] in msg.text:
                    matches[k] = matches[k] + 1

    stats = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—é {int(to_spend/20)} –ø–∞–∫—ñ–≤\n"
    for i in range(len(drop)):
        stats += f"{drop_texts[i]} - {matches[i]}\n"
    app.send_message(chat_id, stats)


def fight(_, message, times, chat_id):
    for i in range(times):
        try:
            if i % 30 == 0:
                buy_heal(_, message)
            bot_results = app.get_inline_bot_results("Random_UAbot")
            app.send_inline_bot_result(chat_id, bot_results.query_id, bot_results.results[0].id)
            sleep(1)
        except FloodWait as e:
            sleep(e.x)
    app.send_message(chat_id, "–∫—ñ–Ω—á–∏–≤")


def click(_, message, start_message_id, times, chat_id):
    for i in range(start_message_id - times, start_message_id + 1):
        message_to_click = app.get_messages(chat_id, i)
        try:
            message_to_click.click(0, timeout=1)
        except TimeoutError as e:   # skip timeout
            pass
        except ValueError as e:     # skip non-battle messages
            pass


app.run()
